#!/bin/bash

PRG="$0"
while [ -h "$PRG" ] ; do
 ls=`ls -ld "$PRG"`
 link=`expr "$ls" : '.*-> \(.*\)$'`
 if expr "$link" : '/.*' > /dev/null; then
   PRG="$link"
 else
   PRG=`dirname "$PRG"`/"$link"
 fi
done

STARDOG_BIN=`dirname "$PRG"`
. ${STARDOG_BIN}/helpers.sh

build_classpath admin

STARDOG_ARGS=("$@")

is_appstart "${STARDOG_ARGS[@]}"

is_foreground "${STARDOG_ARGS[@]}"

is_daemon "${STARDOG_ARGS[@]}"

handle_zk "${STARDOG_ARGS[@]}"

check_log4j_config

CMD_ARGS=$(quote_cmdline "${STARDOG_ARGS[@]}")

if [ -n "$APP_START" -a -z "$FOREGROUND" ]; then
	check_home "$STARDOG_HOME"

    if [ "${IS_ZK}" = true ]; then
        LOG_FILE="${STARDOG_HOME}/zookeeper.log"
    else
        LOG_FILE="${STARDOG_HOME}/stardog.log"
    fi

    touch $LOG_FILE
    TEMP_FILE_CREATED=0
    PID_FILE="${STARDOG_HOME}/stardog.pid"
    if [ -z "$DAEMON" ]; then
        SERVER_START_LOG=`mktemp -t stardog-server-start.XXXXXXXX`
        SERVER_START_LOG=`cygwinify $SERVER_START_LOG`

        if [ "$?" != "0" ]; then
            echo Failed to create a temporary file
        else
            export SERVER_START_LOG
            TEMP_FILE_CREATED=1
        fi
        tail -n 0 -f $LOG_FILE > >(grep -v "^INFO") &
        TAILPID=$!
    fi

    trap "signal_handler_first_stage" INT TERM

    eval "${java}" ${STARDOG_SERVER_JAVA_ARGS} ${STARDOG_PERF_JAVA_ARGS} ${DEFAULT_JAVA_ARGS} \
              -Dstardog.install.location="${STARDOG}"  -server -classpath "${CLASSPATH}:${STARDOG_EXT}/*" \
              com.complexible.stardog.cli.admin.CLI "${CMD_ARGS}" >> $LOG_FILE 2>&1 &
    PID=$!
    echo ${PID} > ${PID_FILE}

    if [ $TEMP_FILE_CREATED -eq 1 ]; then
        LOG_FILE_READY=0

        EXIT_CODE=0
        while [ $LOG_FILE_READY -eq 0 ]; do
          sleep .5

          if [ -s "$SERVER_START_LOG" ]; then
            # server started succesfully
            LOG_FILE_READY=1
          fi

          process_exists $PID
          if [ "$?" != "0" ]; then
            # server failed to start
            EXIT_CODE=1
            LOG_FILE_READY=1
          fi
        done

        trap - INT TERM EXIT
        rm $SERVER_START_LOG
        disown $TAILPID
        kill $TAILPID
        exit $EXIT_CODE
    else
        echo Starting Stardog server in background, see $LOG_FILE for more information.
    fi
elif [ -n "$APP_START" ]; then
  eval exec  "${java}" ${STARDOG_SERVER_JAVA_ARGS} ${STARDOG_PERF_JAVA_ARGS} ${DEFAULT_JAVA_ARGS} \
         -Dstardog.install.location="${STARDOG}"  -server -classpath "${CLASSPATH}:${STARDOG_EXT}/*" \
         com.complexible.stardog.cli.admin.CLI "${CMD_ARGS}"
else
  eval exec  "${java}" ${STARDOG_JAVA_ARGS} ${STARDOG_PERF_JAVA_ARGS} ${DEFAULT_JAVA_ARGS} \
        -Dstardog.install.location="${STARDOG}" -Dorg.apache.logging.log4j.simplelog.StatusLogger.level=OFF \
        -classpath "${CLASSPATH}" \
        com.complexible.stardog.cli.admin.CLI "${CMD_ARGS}"
fi
